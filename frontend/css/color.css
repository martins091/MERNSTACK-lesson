/* Colors in CSS
Colors play a crucial role in web design, affecting the aesthetics and usability of a webpage. 
CSS provides a variety of ways to specify and apply colors to HTML elements. 
Understanding how to use colors effectively can enhance the visual appeal and 
accessibility of your website.

1. Methods to Specify Colors in CSS
CSS allows you to define colors using different methods. Here are the most common ones:

1, Named Colors
2, Hexadecimal Colors
3, RGB and RGBA Colors
4, HSL and HSLA Colors */

/* 
1 Named Colors
CSS has a set of predefined named colors like red, blue, green, black, white, gray, and many more. 
These colors are easy to remember and use, especially for common colors. 
*/
body {
    background-color: lightblue;
  }
  
  h1 {
    color: darkblue;
  }

  
  /* 
  2 Hexadecimal Colors
  Hexadecimal colors are represented with a # symbol followed by three or six hexadecimal digits. The format is #RRGGBB, where:
  
  RR represents the red value,
  GG represents the green value, and
  BB represents the blue value. 

  Each pair of digits ranges from 00 (0) to FF (255).
  */
  p {
    color: #ff6347; /* Tomato Red */
    background-color: #f0f8ff; /* Alice Blue */
  }
  /* Shorthand Hex: When all pairs have identical values, you can use a 
  shorthand like #fff instead of #ffffff for white. */


  /* 
  3. RGB and RGBA Colors
  RGB stands for Red, Green, and Blue. In CSS, RGB colors are specified using the rgb() function, which accepts values from 0 to 255 for each color component.

  RGB Syntax: rgb(red, green, blue)
  RGBA Syntax: rgba(red, green, blue, alpha)
  The alpha value represents the opacity of the color, ranging from 0 (fully transparent) to 1 (fully opaque).
 */
 div {
    background-color: rgb(255, 99, 71); /* Tomato */
  }
  
  span {
    color: rgba(255, 99, 71, 0.5); /* Tomato with 50% opacity */
  }
  /* rgba(255, 99, 71, 0.5) means 50% transparent Tomato Red. */


  /* 
  4. HSL and HSLA Colors
  HSL stands for Hue, Saturation, and Lightness. The HSL color model is often easier to work with than RGB because it is more intuitive. It allows you to manipulate colors by adjusting their hue, saturation, and lightness.

  Hue: Represents the degree on the color wheel (0-360째). For example, 0째 is red, 120째 is green, and 240째 is blue.
  Saturation: Represents the intensity of the color, ranging from 0% (gray) to 100% (full color).
  Lightness: Represents the lightness of the color, ranging from 0% (black) to 100% (white). 
*/
/* syntax:
HSL: hsl(hue, saturation, lightness)
HSLA: hsla(hue, saturation, lightness, alpha) */
h2 {
    color: hsl(240, 100%, 50%); /* Pure Blue */
  }
  
  section {
    background-color: hsla(240, 100%, 50%, 0.3); /* Blue with 30% opacity */
  }
  

  /* 5
  Gradient Colors
  CSS also supports gradient backgrounds that create a smooth transition between two or 
  more colors. Gradients are commonly used to add depth and texture to a webpage.

  Linear Gradient: Creates a gradient along a straight line.
  Radial Gradient: Creates a gradient that radiates from the center. 
  */
  /* Linear Gradient */
header {
    background: linear-gradient(to right, red, yellow);
  }
  
  /* Radial Gradient */
  div {
    background: radial-gradient(circle, lightblue, navy);
  }

  
  /* a {
    border: 1px solid currentColor; 
  } */
  

